# new-session -n emacs 'emacs -nw'

# setting up copy/paste: http://robots.thoughtbot.com/post/19398560514/how-to-copy-and-paste-with-tmux-on-mac-os-x
# OS X install with 'brew install reattach-to-user-namespace'
set-option -g default-command "reattach-to-user-namespace -l bash"

# much stolen from http://manoftoday.wikidot.com/tmux
##################################################
# Global
##################################################
# Set prefix to ^a (like screen)
# go to start of line will be C-a C-a
set-option -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix

setw -g mode-mouse on
set -g status-bg colour111

# scrollback buffer n lines
set -g history-limit 5000

# start window indexing at one (default = 0)
set -g base-index 1

# instructs tmux to expect UTF-8 sequences
setw -g utf8 on

# listen for activity on all windows
set -g bell-action any
#set -g bell-action none

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

set -g terminal-overrides "*88col*:colors=88,*256col*:colors=256,xterm*:colors=256"

# tell tmux to use 256 colour terminal
# set -g default-terminal "screen-256color"
set -g default-terminal "xterm-256color"

# vi-style controls for copy mode
setw -g mode-keys vi

# xterm-style function key sequences
setw -g xterm-keys on

set -g mouse-select-pane on

# for a faster escape response in vim
set-option -s escape-time 10

##################################################
# Key bindings
##################################################
# reload conf
bind R source-file ~/.tmux.conf

bind C-d detach
# bind C-e new 'exec emacs -nw'
# bind e new 'exec emacsclient -c -nw'
# bind-key r new 'exec ranger-cd'

# open a man page in new window
bind-key / command-prompt "split-window -h 'exec man %%'"

# quick view of processes
bind-key "~" split-window -h "exec top"

# displays
bind-key * list-clients

# redisplay (default key in tmux is 'r')
bind-key r refresh-client

# choose window/session
bind-key "'" choose-window
bind-key '"' choose-session

# resize panes like vim
bind-key -r < resize-pane -L 3
bind-key -r > resize-pane -R 3
bind-key -r + resize-pane -U 1
bind-key -r = resize-pane -D 1

# window/pane navigation
bind C-p previous-window
bind C-n next-window
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
bind-key -nr M-n select-window -t :+
bind-key -nr M-p select-window -t :-

# switch to last active window
bind-key Tab last-window

# rebinding window splitting
unbind % # Remove default binding since we’re replacing
bind | split-window -h
bind - split-window -v
bind -n M-2 split-window -v
bind -n M-3 split-window -h
bind -n M-0 kill-pane

##################################################
## copy and paste
##################################################
# copying and pasting
bind-key [ copy-mode
bind-key ] paste-buffer -s \015

# enable mouse selection in copy mode
setw -g mode-mouse on

# list all paste buffers (default key is '#')
bind-key b list-buffers

# choose buffer to paste interactively (default key was '=')
bind-key p choose-buffer

# delete the most recently copied buffer of text (default key was '-')
bind-key x delete-buffer

# pipe contents of buffer to pbcopy
bind-key Y run-shell "tmux save-buffer - | reattach-to-user-namespace pbcopy"

########### Statusbar settings
bind-key S command-prompt -p ssh: "new-window -n %1 'ssh %1'"

# toggle statusbar
bind-key s set status

# use vi-style key bindings in the status line
set -g status-keys vi

# For multiuser:
# tmux -S /tmp/multi
# chmod 777 /tmp/multi
# tmux -S /tmp/multi attach # as the other user

set -g status-bg black
set -g status-fg green
set -g status-left-length 15
set -g status-left ' #[fg=cyan,bright]#10H#[fg=green]:#[fg=white]#S#[fg=green] | #[default]'
# set -g status-right '| #[fg=yellow]%Y-%m-%d %H:%M '
set -g status-right '#(battery-life) (#(battery-time)) #[fg=yellow]%Y-%m-%d %H:%M#[default] '
# set -g status-right '| #[fg=yellow]%Y-%m-%d %H:%M #[fg=yellow]#(uptime | cut -d "," -f 2-)' #adds uptime and user load
set -g status-justify centre

setw -g window-status-current-fg cyan
setw -g window-status-current-attr bright

set -g pane-active-border-fg blue
set -g pane-border-fg white

# window title
# enable wm window titles
set-option -g set-titles on

# wm window title string (uses statusbar variables)
set-option -g set-titles-string '#S:#I.#P #W' # window number,program name,active (or not)

# control automatic window renaming
set-window-option -g automatic-rename on # auto name

# users logged in and average load on right side
# set -g status-right '

# status bar
# set-option -g status-utf8 on
# set-option -g status-justify right
# set-option -g status-bg black
# set-option -g status-fg cyan
# set-option -g status-interval 5
# set-option -g status-left-length 30
# set-option -g status-left '#[fg=magenta]» #[fg=blue,bold]#T#[default]'
# set-option -g status-right '#[fg=cyan]»» #[fg=blue,bold]###S #[fg=magenta]%R %m-%d#(acpi | cut -d ',' -f 2)#[default]'
# set-option -g visual-activity on
# set-window-option -g monitor-activity on
# set-window-option -g window-status-current-fg white

# clock
# set-window-option -g clock-mode-colour cyan
# set-window-option -g clock-mode-style 24


# move tmux copy buffer into x clipboard
# bind-key C-y save-buffer /tmp/tmux-buffer \; run-shell "cat /tmp/tmux-buffer | xclip"
#
bind-key C-y paste-buffer -s \015
#bind C-y run-shell "reattach-to-user-namespace -l zsh -c 'tmux show-buffer | pbcopy'"


# Set window notifications
# setw -g monitor-activity on
# set -g visual-activity on

# Automatically set window title
# setw -g automatic-rename
